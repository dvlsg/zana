!function(){"use strict";function e(e){var r=e.numbers={};r.factors=function(){var r=0,n=e.getType(this)===e.types.number?this:arguments[r++];e.assert.isNumber(n);for(var t=[],u=[],o=1;o<=Math.floor(Math.sqrt(n));o++)n%o===0&&(t.push(o),n/o!==o&&u.push(n/o));return t.concat(u.reverse())},r.round=function(){var r=0,n=e.getType(this)===e.types.number?this:arguments[r++],t=arguments[r++]||1,u=arguments[r++];if(e.assert.isNumber(n),u){if(u=u.toString().toLowerCase(),"down"===u)return e.numbers.roundDown(n,t);if("up"===u)return e.numbers.roundUp(n,t)}return Math.round(n/t)*t},r.roundDown=function(){var r=0,n=e.getType(this)===e.types.number?this:arguments[r++],t=arguments[r++]||1;return e.assert.isNumber(n),Math.floor(n/t)*t},r.roundUp=function(){var r=0,n=e.getType(this)===e.types.number?this:arguments[r++],t=arguments[r++]||1;return e.assert.isNumber(n),Math.ceil(n/t)*t},e.setup.initNumbers=function(r){r&&(e.defineProperty(Number.prototype,"factors",{enumerable:!1,writable:!1,value:e.numbers.factors}),e.defineProperty(Number.prototype,"round",{enumerable:!1,writable:!1,value:e.numbers.round}),e.defineProperty(Number.prototype,"roundDown",{enumerable:!1,writable:!1,value:e.numbers.roundDown}),e.defineProperty(Number.prototype,"roundUp",{enumerable:!1,writable:!1,value:e.numbers.roundUp}))}}var r="undefined"!=typeof window?window:"undefined"!=typeof global?global:this;"undefined"!=typeof define&&"undefined"!=typeof define.amd?(define(function(){return e}),r.z=z):"undefined"!=typeof module?"undefined"!=typeof module.exports&&(module.exports=e):"undefined"!=typeof r.z&&e(r.z)}();
//# sourceMappingURL=numbers.min.js.map